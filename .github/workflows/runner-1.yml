name: CI Checks 1

on:
  pull_request:
    branches:
      - develop
      - release-*

jobs:
  install_third_party_dependencies:
    runs-on:  ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        suite:
          - adminPage
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8.15'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            requirements.in
            requirements.txt
            requirements_dev.in
            requirements_dev.txt
      - name: Setup python by installing wheel
        run: pip install wheel==0.35.0
        shell: bash
      - uses: ./.github/actions/merge
      - name: Install python2
        run: |
          sudo apt-get update
          sudo apt-get install python2
      - name: Cache third party dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-third-party-dependencies
        with:
          path: |
            /home/runner/work/oppia/oppia/third_party
            /home/runner/work/oppia/oppia/node_modules
            /home/runner/work/oppia/yarn_cache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock', 'dependencies.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Check if dependencies are cached
        id: check-cache
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/work/oppia/oppia/third_party
            /home/runner/work/oppia/oppia/node_modules
            /home/runner/work/oppia/yarn_cache
            ...
          # We can change the key depending on the dependencies we are using
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock', 'dependencies.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.check-cache.outputs.cache-hit != 'true'
        run: |
          # Install dependencies
          echo "Installing dependencies"
          python -m scripts.install_third_party_libs
        shell: bash
      - name: Cache dependencies
        if: steps.check-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/work/oppia/oppia/third_party
            /home/runner/work/oppia/oppia/node_modules
            /home/runner/work/oppia/yarn_cache
            ...
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock', 'dependencies.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install chrome
        run: python -m scripts.install_chrome_for_ci
      - name: Install ffmpeg
        run: sudo apt install ffmpeg
      - name: Build Webpack
        run: python -m scripts.build --prod_env
      - name: Zip build files
        # We avoid using ../ or absolute paths because unzip treats these as
        # security issues and will refuse to follow them.
        run: |
          zip -rqy build_files.zip oppia/third_party oppia_tools oppia/build oppia/webpack_bundles oppia/proto_files oppia/app.yaml oppia/assets/hashes.json oppia/proto_files oppia/extensions/classifiers/proto/* oppia/backend_prod_files oppia/dist
        working-directory: /home/runner/work/oppia

      - name: Authenticate with google artifact
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'my-service-account@my-project.iam.gserviceaccount.com'

      - name: Upload build files to artifact
        id: 'upload-file'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: /home/runner/work/oppia/build_files.zip
          destination: oppia-prod-builds/build_files.zip

      - name: Run E2E Test
        run: xvfb-run -a --server-args="-screen 0, 1285x1000x24" python -m scripts.run_e2e_tests --skip-install --skip-build --suite=${{ matrix.suite }} --prod_env
        env:
          VIDEO_RECORDING_IS_ENABLED: 0
      - name: Uploading webdriverio-video as Artifacts
        if: ${{ failure() }}
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: /home/runner/work/oppia/webdriverio-video        
          destination: oppia-prod-builds/e2e-test-results/webdriverio-video

      - name: Uploading webdriverio screenshots as Artifacts
        if: ${{ failure() }}
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: /home/runner/work/oppia/webdriverio-screenshots
          destination: oppia-prod-builds/e2e-test-results/webdriverio-screenshots

      - name: Uploading webpack bundles as an artifact
        if: ${{ failure() }}
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          name: webpack-bundles
          path: /home/runner/work/oppia/oppia/webpack_bundles
          destination: oppia-prod-builds/e2e-test-results/webpack-bundles

      - name: Report failure if failed on oppia/oppia develop branch
        if: ${{ failure() && github.event_name == 'push' && github.repository == 'oppia/oppia' && github.ref == 'refs/heads/develop'}}
        uses: ./.github/actions/send-webhook-notification
        with:
          message: "An E2E test failed on the upstream develop branch."
          webhook-url: ${{ secrets.BUILD_FAILURE_ROOM_WEBHOOK_URL }}
